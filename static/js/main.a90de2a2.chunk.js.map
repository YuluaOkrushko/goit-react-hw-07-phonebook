{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css","Redux/actions/contactActions.js","Redux/operations/contactOperations.js","Redux/selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Redux/actions/filterActions.js","Components/Filter/Filter.js","App.js","Redux/reducer/contactsReducers.js","Redux/reducer/filterReducers.js","Redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","addContact","name","number","dispatch","contactActions","axios","post","then","data","catch","error","deleteContact","id","delete","fetchContacts","get","getContacts","state","contacts","phoneBookReducer","getFilter","filter","filterContactReducer","getVisibleContacts","createSelector","contact","toLowerCase","includes","ContactForm","isExist","duplicateContact","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","map","setTimeout","onSubmit","handleCloseErrorWindow","this","CSSTransition","in","appear","timeout","classNames","styles","unmountOnExit","className","title_phonebook","onClick","wrapper","title_item","input","type","autoComplete","onChange","mask","placeholder","pattern","button_wrapper","button","disabled","Component","connect","selectors","contactOperations","ContactList","handleDeleteContact","TransitionGroup","component","item","list","filterContactByName","payload","onFilter","filterActions","title","App","onFetchContacts","length","mapDispatchToProps","createReducer","action","combineReducers","defaultMiddleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","contactsReducers","filterReducers","middleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a90de2a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1i5I9\",\"list\":\"ContactList_list__3mDjR\",\"button\":\"ContactList_button__27DiQ\",\"enter\":\"ContactList_enter__1EVU2\",\"enterActive\":\"ContactList_enterActive__2kJim\",\"exit\":\"ContactList_exit__U11eA\",\"exitActive\":\"ContactList_exitActive__3dwa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2YIDM\",\"title\":\"Filter_title__1hRUA\",\"input\":\"Filter_input__3L2gf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__28UBX\",\"title\":\"App_title__pAiRz\",\"item\":\"App_item__1l2LW\",\"appear\":\"App_appear__2MRft\",\"appearActive\":\"App_appearActive__UxOMY\",\"enter\":\"App_enter__3NjOc\",\"enterActive\":\"App_enterActive__1-60L\",\"exit\":\"App_exit__dchdI\",\"exitActive\":\"App_exitActive__3X8pP\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contact/addRequest');\r\nconst addContactSuccess = createAction('contact/addSuccess');\r\nconst addContactError = createAction('contact/addError');\r\n\r\nconst fetchContactsRequest = createAction('contact/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contact/fetchSuccess');\r\nconst fetchContactsError = createAction('contact/fetchError');\r\n\r\nconst deleteContactRequest = createAction('contact/deleteRequest');\r\nconst deleteContactSuccess = createAction('contact/deleteSuccess');\r\nconst deleteContactError = createAction('contact/deleteError');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import axios from 'axios';\r\nimport contactActions from '../actions/contactActions';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(contactActions.addContactRequest());\r\n\r\n  axios\r\n    .post('http://localhost:2000/contacts', { name, number })\r\n    .then(({ data }) => {\r\n      dispatch(contactActions.addContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(contactActions.addContactError(error)));\r\n};\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('http://localhost:2000/contacts')\r\n    .then(({ data }) => dispatch(contactActions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(contactActions.fetchContactsError(error)));\r\n};\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(contactActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(contactActions.deleteContactSuccess(id));\r\n    })\r\n    .catch(error => dispatch(contactActions.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getContacts = state => state.contacts.phoneBookReducer;\r\nconst getFilter = state => state.filter.filterContactReducer;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      !filter ? true : contact.name.toLowerCase().includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactOperations from '../../Redux/operations/contactOperations';\r\nimport selectors from '../../Redux/selectors';\r\nimport styles from './ContactForm.module.css';\r\nimport InputMask from 'react-input-mask';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    isExist: false,\r\n    duplicateContact: '',\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    const { contacts } = this.props;\r\n    const availableNames = contacts.map(contact => contact.name.toLowerCase());\r\n\r\n    if (availableNames.includes(name.toLowerCase())) {\r\n      this.setState({ isExist: true, duplicateContact: name });\r\n      setTimeout(\r\n        () => this.setState({ isExist: false, duplicateContact: '' }),\r\n        5000,\r\n      );\r\n    } else {\r\n      this.props.onSubmit(this.state);\r\n      this.setState({\r\n        name: '',\r\n        number: '',\r\n        isExist: false,\r\n        duplicateContact: '',\r\n      });\r\n    }\r\n  };\r\n  handleCloseErrorWindow = () => {\r\n    this.setState({\r\n      isExist: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isExist, duplicateContact } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            timeout={500}\r\n            classNames={styles}\r\n            unmountOnExit\r\n          >\r\n            <h1 className={styles.title_phonebook}>Phonebook</h1>\r\n          </CSSTransition>\r\n          <CSSTransition\r\n            in={isExist}\r\n            timeout={250}\r\n            classNames={styles}\r\n            unmountOnExit\r\n          >\r\n            <div onClick={this.handleCloseErrorWindow} className={styles.error}>\r\n              {duplicateContact} already exist!\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <div className={styles.wrapper}>\r\n              <h3 className={styles.title_item}>Name</h3>\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </label>\r\n          <label>\r\n            <div className={styles.wrapper}>\r\n              <h3 className={styles.title_item}>Number</h3>\r\n              <InputMask\r\n                mask=\"999-99-99\"\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                autoComplete=\"off\"\r\n                onChange={this.handleChange}\r\n                value={number}\r\n                name=\"number\"\r\n                placeholder=\"000-00-00\"\r\n                pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n              />\r\n            </div>\r\n          </label>\r\n          <div className={styles.button_wrapper}>\r\n            <button\r\n              className={styles.button}\r\n              type=\"submit\"\r\n              disabled={name === '' || number === '' ? true : false}\r\n            >\r\n              Add contact\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: selectors.getContacts(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(contactOperations.addContact(data)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport contactOperations from '../../Redux/operations/contactOperations';\r\nimport selectors from '../../Redux/selectors';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  handleDeleteContact = id => () => {\r\n    const { deleteContact } = this.props;\r\n    deleteContact(id);\r\n  };\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <TransitionGroup component=\"ul\" className={styles.item}>\r\n        {contacts.map(item => (\r\n          <CSSTransition key={item.id} timeout={250} classNames={styles}>\r\n            <li className={styles.list}>\r\n              {item.name} : {item.number}\r\n              <button\r\n                className={styles.button}\r\n                id={item.id}\r\n                onClick={this.handleDeleteContact(item.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(contactOperations.deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return { contacts: selectors.getVisibleContacts(state) };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst filterContactByName = createAction(\"contact/filter\", (value) => {\r\n  return {\r\n    payload: {\r\n      value,\r\n    },\r\n  };\r\n});\r\nexport default filterContactByName;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport filterActions from '../../Redux/actions/filterActions';\r\nimport selectors from '../../Redux/selectors';\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onFilter }) => (\r\n  <div className={styles.wrapper}>\r\n    <p className={styles.title}>Find contact</p>\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      onChange={onFilter}\r\n      value={value}\r\n      name=\"filter\"\r\n    ></input>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: selectors.getFilter(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFilter: e => dispatch(filterActions(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport contactOperations from './Redux/operations/contactOperations';\nimport selectors from './Redux/selectors';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  render() {\n    const { contacts } = this.props;\n    return (\n      <div className={styles.wrapper}>\n        <ContactForm />\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={500}\n          classNames={styles}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <ContactList />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: selectors.getContacts(state),\n});\nconst mapDispatchToProps = {\n  onFetchContacts: contactOperations.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from '../actions/contactActions';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst phoneBookReducer = createReducer([], {\r\n  [contactActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactActions.addContactSuccess]: addContact,\r\n  [contactActions.deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nexport default combineReducers({\r\n  phoneBookReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport filterActions from \"../actions/filterActions\";\r\n\r\nconst filterContactReducer = createReducer(\"\", {\r\n  [filterActions]: (state, action) => action.payload.value,\r\n});\r\n\r\nexport default combineReducers({\r\n  filterContactReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducers from './reducer/contactsReducers';\r\nimport filterReducers from './reducer/filterReducers';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n    filter: filterReducers,\r\n  },\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__2fR0L\",\"title\":\"ContactForm_title__3SAbK\",\"title_phonebook\":\"ContactForm_title_phonebook__2ow0J\",\"input\":\"ContactForm_input__3wXTl\",\"button_wrapper\":\"ContactForm_button_wrapper__28yfU\",\"button\":\"ContactForm_button__1dBHS\",\"title_item\":\"ContactForm_title_item__15vMb\",\"appear\":\"ContactForm_appear___v4Fi\",\"appearActive\":\"ContactForm_appearActive__B-SUh\",\"error\":\"ContactForm_error__1cUuF\"};"],"sourceRoot":""}